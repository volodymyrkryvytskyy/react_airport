{"version":3,"sources":["FlightsTable.js","helper.js","service.js","Arrivals.js","Departures.js","App.js","index.js"],"names":["FlightsTable","_ref","flightsList","flightTimeType","pageType","map","flight","localTime","Date","toTimeString","slice","react_default","a","createElement","className","key","fltNo","status","term","airline","ua","name","codeShareData","icao","flightsData","flights","day","filter","checkMap","checkDay","flightDate","timeDepShedule","timeToStand","lookupDate","setDate","getDate","getData","Object","asyncToGenerator","regenerator_default","mark","_callee","currentDate","url","dataPromise","fetchedData","wrap","_context","prev","next","toLocaleDateString","replace","concat","fetch","sent","json","abrupt","body","stop","apply","this","arguments","Arrivals","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","arrival","arrivalsData","takeData","prevProps","_this$props","currentDay","dateMap","setState","prevState","type","src_FlightsTable","Component","Departures","departure","departuresData","TYPE_ARRIVALS","TODAY","App","setCurrentPage","target","currentPage","setCurrentDay","Yesterday","Today","Tomorrow","allFlights","_this2","_this$state","src","alt","onClick","src_Arrivals","src_Departures","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3187324f.chunk.js","sourcesContent":["import React from 'react';\n\nconst FlightsTable = ({ flightsList, pageType }) => {\n  const flightTimeType = pageType === 'Arrivals'\n    ? 'timeToStand'\n    : 'timeDepShedule';\n  return flightsList.map((flight) => {\n    const localTime = new Date(flight[flightTimeType])\n      .toTimeString()\n      .slice(0, 5);\n    return (\n      <tr className=\"flights\" key={flight.fltNo + flight.status}>\n        <td>{flight.term}</td>\n        <td>{localTime}</td>\n        <td>{flight['airportFromID.city'] || flight['airportToID.city']}</td>\n        <td>{flight.status}</td>\n        <td>{flight.airline.ua.name}</td>\n        <td>{flight.codeShareData['0'].icao + flight.fltNo}</td>\n      </tr>\n    );\n  });\n};\n\nexport default FlightsTable;\n","\nconst flightsData = (flights, map, day) => {\n  const data = flights.filter((flight) => {\n    const flightDate = new Date(flight.timeDepShedule || flight.timeToStand);\n    const lookupDate = new Date();\n    const currentDayCheck = (checkMap, checkDay) => {\n      lookupDate.setDate(lookupDate.getDate() + checkMap[checkDay]);\n    };\n\n    currentDayCheck(map, day);\n\n    return flightDate.getDate() === lookupDate.getDate();\n  });\n  return data;\n};\n\nexport default flightsData;\n","const getData = async() => {\n  const currentDate = new Date()\n    .toLocaleDateString('ru-RU')\n    .replace(/\\./g, '-');\n  const url = `https://api.iev.aero/api/flights/${currentDate}`;\n  const dataPromise = await fetch(url);\n  const fetchedData = await dataPromise.json();\n\n  return fetchedData.body;\n};\n\nexport default getData;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FlightsTable from './FlightsTable';\nimport flightsData from './helper';\nimport getData from './service';\n\nclass Arrivals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arrival: [],\n      arrivalsData: [],\n    };\n  }\n\n  componentDidMount() {\n    this.takeData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { currentDay, dateMap } = this.props;\n    if (currentDay !== prevProps.currentDay) {\n      this.setState((prevState) => {\n        return {\n          arrivalsData: flightsData(prevState.arrival, dateMap, currentDay),\n        };\n      });\n    }\n  }\n\n  async takeData() {\n    const { arrival } = await getData();\n    const { currentDay, dateMap } = this.props;\n    this.setState({\n      arrival,\n      arrivalsData: flightsData(arrival, dateMap, currentDay),\n    });\n  }\n\n  render() {\n    const { type } = this.props;\n    const { arrivalsData } = this.state;\n\n    return <FlightsTable flightsList={arrivalsData} pageType={type} />;\n  }\n}\n\nArrivals.propTypes = {\n  currentDay: PropTypes.string.isRequired,\n  dateMap: PropTypes.objectOf(PropTypes.number).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Arrivals;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FlightsTable from './FlightsTable';\nimport getData from './service';\nimport flightsData from './helper';\n\nclass Departures extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      departure: [],\n      departuresData: [],\n    };\n  }\n\n  componentDidMount() {\n    this.takeData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { currentDay, dateMap } = this.props;\n    if (currentDay !== prevProps.currentDay) {\n      this.setState((prevState) => {\n        return {\n          departuresData: flightsData(prevState.departure, dateMap, currentDay),\n        };\n      });\n    }\n  }\n\n  async takeData() {\n    const { departure } = await getData();\n    const { currentDay, dateMap } = this.props;\n    this.setState({\n      departure,\n      departuresData: flightsData(departure, dateMap, currentDay),\n    });\n  }\n\n  render() {\n    const { type } = this.props;\n    const { departuresData } = this.state;\n\n    return <FlightsTable flightsList={departuresData} pageType={type} />;\n  }\n}\n\nDepartures.propTypes = {\n  currentDay: PropTypes.string.isRequired,\n  dateMap: PropTypes.objectOf(PropTypes.number).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Departures;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Arrivals from './Arrivals';\nimport Departures from './Departures';\nimport getData from './service';\n\nconst TYPE_DEPARTURES = 'Departures'\nconst TYPE_ARRIVALS = 'Arrivals'\nconst YESTERDAY = 'Yesterday'\nconst TODAY = 'Today'\nconst TOMORROW = 'Tomorrow'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: TYPE_ARRIVALS,\n      currentDay: TODAY,\n      dateMap : {\n        'Yesterday': -1,\n        'Today' : 0,\n        'Tomorrow': +1\n      },\n      allFlights: [],\n    };\n  }\n\n  componentDidMount() { \n    this.takeData();\n  }\n\n  async takeData() {\n    const fetchedData = await getData();\n   \n    this.setState({\n      allFlights: fetchedData,\n    });\n  }\n\n  setCurrentPage = (target) => {\n    this.setState({ currentPage: target });\n  }\n\n  setCurrentDay = (day) => {\n    this.setState({ currentDay: day})\n  }\n\n  render() {\n    const { currentDay, currentPage, dateMap} = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"typeContainer\">\n          <img\n            src=\"https://bit.ly/2YB0YpL\"\n            alt=\"departures\"\n            className=\"departure-bg-img\"\n          />\n          <button\n            onClick={() => this.setCurrentPage(TYPE_DEPARTURES)}\n            className=\"typeButton\"\n            type=\"submit\"\n          >\n            Departures\n          </button>\n          <button\n            onClick={() => this.setCurrentPage(TYPE_ARRIVALS)}\n            className=\"typeButton\"\n            type=\"submit\"\n          >\n            Arrivals\n          </button>\n          <img\n            src=\"https://bit.ly/2xrC5Ri\"\n            alt=\"arrivals\"\n            className=\"arrival-bg-img\"\n          />\n        </div>\n        <div className=\"pickADate\">\n          <button\n            type=\"submit\"\n            onClick={() => this.setCurrentDay(YESTERDAY)}\n            className=\"dateButton\"\n          >\n            Yesterday\n          </button>\n          <button\n            type=\"submit\"\n            onClick={() => this.setCurrentDay(TODAY)}\n            className=\"dateButton\"\n          >\n            Today\n          </button>\n          <button\n            type=\"submit\"\n            onClick={() => this.setCurrentDay(TOMORROW)}\n            className=\"dateButton\"\n          >\n            Tomorrow\n          </button>\n        </div>\n        <h3>{`${currentPage} for ${currentDay}`}</h3>\n        <table className=\"AppTable\">\n          <thead className=\"tableHead\">\n            <tr>\n              <th>Terminal</th>\n              <th>Local Time</th>\n              <th>Destination</th>\n              <th>Status</th>\n              <th>Airline</th>\n              <th>Flight</th>\n            </tr>\n          </thead>\n          <tbody>\n\n            {currentPage === TYPE_ARRIVALS ?\n              (<Arrivals\n                currentDay={currentDay}\n                dateMap={dateMap}\n                type={TYPE_ARRIVALS}\n              />)\n              : (<Departures\n                  currentDay={currentDay}\n                  dateMap={dateMap}\n                  type={TYPE_DEPARTURES}\n                />)\n            }\n            \n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}