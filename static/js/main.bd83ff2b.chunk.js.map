{"version":3,"sources":["FlightsTable.js","helper.js","service.js","Flights.js","App.js","index.js"],"names":["FlightsTable","_ref","flightsList","flightTimeType","pageType","map","flight","localTime","Date","toTimeString","slice","react_default","a","createElement","className","key","fltNo","status","term","airline","ua","name","codeShareData","icao","dateMap","Yesterday","Today","Tomorrow","flightsData","flights","day","filter","checkMap","checkDay","flightDate","timeDepShedule","timeToStand","lookupDate","setDate","getDate","getData","Object","asyncToGenerator","regenerator_default","mark","_callee","currentDate","url","dataPromise","fetchedData","wrap","_context","prev","next","toLocaleDateString","replace","concat","fetch","sent","json","abrupt","body","stop","apply","this","arguments","Flights","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","currentFlightsData","fetchData","prevProps","_this$props","currentDay","type","setState","prevState","src_FlightsTable","Component","TYPE_ARRIVALS","TODAY","App","setCurrentPage","currentPage","setCurrentDay","allFlights","takeData","_this2","_this$state","src","alt","onClick","src_Flights","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"oRAuBeA,SArBM,SAAAC,GAA+B,IAA5BC,EAA4BD,EAA5BC,YAChBC,EAA8B,YADcF,EAAfG,SAE/B,cACA,iBACJ,OAAOF,EAAYG,IAAI,SAACC,GACtB,IAAMC,EAAY,IAAIC,KAAKF,EAAOH,IAC/BM,eACAC,MAAM,EAAG,GACZ,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUC,IAAKT,EAAOU,MAAQV,EAAOW,QACjDN,EAAAC,EAAAC,cAAA,UAAKP,EAAOY,MACZP,EAAAC,EAAAC,cAAA,UAAKN,GACLI,EAAAC,EAAAC,cAAA,UAAKP,EAAO,uBAAyBA,EAAO,qBAC5CK,EAAAC,EAAAC,cAAA,UAAKP,EAAOW,QACZN,EAAAC,EAAAC,cAAA,UAAKP,EAAOa,QAAQC,GAAGC,MACvBV,EAAAC,EAAAC,cAAA,UAAKP,EAAOgB,cAAc,GAAKC,KAAOjB,EAAOU,YCjB/CQ,EAAU,CACdC,WAAY,EACZC,MAAO,EACPC,SAAU,GAkBGC,EAfK,SAACC,EAASC,GAY5B,OAXaD,EAAQE,OAAO,SAACzB,GAC3B,IAEyB0B,EAAUC,EAF7BC,EAAa,IAAI1B,KAAKF,EAAO6B,gBAAkB7B,EAAO8B,aACtDC,EAAa,IAAI7B,KAOvB,OANyBwB,EAITR,EAJmBS,EAIVH,EAHvBO,EAAWC,QAAQD,EAAWE,UAAYP,EAASC,IAK9CC,EAAWK,YAAcF,EAAWE,aCLhCC,EAXF,eAAAvC,EAAAwC,OAAAC,EAAA,EAAAD,CAAAE,EAAA/B,EAAAgC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAN,EAAA/B,EAAAsC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACRP,GAAc,IAAItC,MACrB8C,mBAAmB,SACnBC,QAAQ,MAAO,KACZR,EAJQ,oCAAAS,OAIkCV,GAJlCK,EAAAE,KAAA,EAKYI,MAAMV,GALlB,cAKRC,EALQG,EAAAO,KAAAP,EAAAE,KAAA,EAMYL,EAAYW,OANxB,cAMRV,EANQE,EAAAO,KAAAP,EAAAS,OAAA,SAQPX,EAAYY,MARL,wBAAAV,EAAAW,SAAAjB,MAAH,yBAAA5C,EAAA8D,MAAAC,KAAAC,YAAA,GCkDEC,cA3Cb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAA3B,OAAA4B,EAAA,EAAA5B,CAAAuB,KAAAE,IACjBE,EAAA3B,OAAA6B,EAAA,EAAA7B,CAAAuB,KAAAvB,OAAA8B,EAAA,EAAA9B,CAAAyB,GAAAM,KAAAR,KAAMG,KACDM,MAAQ,CACX5C,QAAS,GACT6C,mBAAoB,IAJLN,mFASjBJ,KAAKW,uDAGYC,GAAW,IAAAC,EACCb,KAAKG,MAA1BW,EADoBD,EACpBC,WAAYC,EADQF,EACRE,KAChBD,IAAeF,EAAUE,YAAcC,IAASH,EAAUG,MAC5Df,KAAKgB,SAAS,SAAAC,GAAS,MAAK,CAC1BP,mBAAoB9C,EAAYqD,EAAUpD,QAAQkD,GAAOD,uKAMhCd,KAAKG,MAA1BW,eAAYC,kBACEvC,WAAhBX,SACNmC,KAAKgB,SAAS,CACZnD,UACA6C,mBAAoB9C,EAAYC,EAAQkD,GAAOD,wIAI1C,IACCC,EAASf,KAAKG,MAAdY,KACAL,EAAuBV,KAAKS,MAA5BC,mBAER,OAAO/D,EAAAC,EAAAC,cAACqE,EAAD,CAAchF,YAAawE,EAAoBtE,SAAU2E,WAnC9CI,aCAhBC,EAAgB,UAEhBC,EAAQ,QA+GCC,cA3Gb,SAAAA,IAAc,IAAAlB,EAAA,OAAA3B,OAAA4B,EAAA,EAAA5B,CAAAuB,KAAAsB,IACZlB,EAAA3B,OAAA6B,EAAA,EAAA7B,CAAAuB,KAAAvB,OAAA8B,EAAA,EAAA9B,CAAA6C,GAAAd,KAAAR,QAoBFuB,eAAiB,SAACnF,GAChBgE,EAAKY,SAAS,CAAEQ,YAAapF,KAtBjBgE,EAyBdqB,cAAgB,SAAC3D,GACfsC,EAAKY,SAAS,CAAEF,WAAYhD,KAxB5BsC,EAAKK,MAAQ,CACXe,YAAaJ,EACbN,WAAYO,EACZK,WAAY,IALFtB,mFAUZJ,KAAK2B,4KAIqBnD,WAApBS,SAENe,KAAKgB,SAAS,CACZU,WAAYzC,uIAYP,IAAA2C,EAAA5B,KAAA6B,EAC4B7B,KAAKS,MAAhCK,EADDe,EACCf,WAAYU,EADbK,EACaL,YACpB,OACE7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OACEiF,IAAI,yBACJC,IAAI,aACJjF,UAAU,qBAEZH,EAAAC,EAAAC,cAAA,UACEmF,QAAS,kBAAMJ,EAAKL,eA/CR,cAgDZzE,UAAU,aACViE,KAAK,UAHP,cAOApE,EAAAC,EAAAC,cAAA,UACEmF,QAAS,kBAAMJ,EAAKL,eAAeH,IACnCtE,UAAU,aACViE,KAAK,UAHP,YAOApE,EAAAC,EAAAC,cAAA,OACEiF,IAAI,yBACJC,IAAI,WACJjF,UAAU,oBAGdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,UACEkE,KAAK,SACLiB,QAAS,kBAAMJ,EAAKH,cAnEd,cAoEN3E,UAAU,cAHZ,aAOAH,EAAAC,EAAAC,cAAA,UACEkE,KAAK,SACLiB,QAAS,kBAAMJ,EAAKH,cAAcJ,IAClCvE,UAAU,cAHZ,SAOAH,EAAAC,EAAAC,cAAA,UACEkE,KAAK,SACLiB,QAAS,kBAAMJ,EAAKH,cA/Ef,aAgFL3E,UAAU,cAHZ,aAQFH,EAAAC,EAAAC,cAAA,aAAA2C,OAAQgC,EAAR,UAAAhC,OAA4BsB,IAC5BnE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YACfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aACfH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,sBAIJF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAACoF,EAAD,CACEnB,WAAYA,EACZC,KAAMS,cAnGFL,aCNlBe,IAASC,OAAOxF,EAAAC,EAAAC,cAACuF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.bd83ff2b.chunk.js","sourcesContent":["import React from 'react';\n\nconst FlightsTable = ({ flightsList, pageType }) => {\n  const flightTimeType = pageType === 'arrival'\n    ? 'timeToStand'\n    : 'timeDepShedule';\n  return flightsList.map((flight) => {\n    const localTime = new Date(flight[flightTimeType])\n      .toTimeString()\n      .slice(0, 5);\n    return (\n      <tr className=\"flights\" key={flight.fltNo + flight.status}>\n        <td>{flight.term}</td>\n        <td>{localTime}</td>\n        <td>{flight['airportFromID.city'] || flight['airportToID.city']}</td>\n        <td>{flight.status}</td>\n        <td>{flight.airline.ua.name}</td>\n        <td>{flight.codeShareData['0'].icao + flight.fltNo}</td>\n      </tr>\n    );\n  });\n};\n\nexport default FlightsTable;\n","const dateMap = {\n  Yesterday: -1,\n  Today: 0,\n  Tomorrow: +1,\n};\n\nconst flightsData = (flights, day) => {\n  const data = flights.filter((flight) => {\n    const flightDate = new Date(flight.timeDepShedule || flight.timeToStand);\n    const lookupDate = new Date();\n    const currentDayCheck = (checkMap, checkDay) => {\n      lookupDate.setDate(lookupDate.getDate() + checkMap[checkDay]);\n    };\n\n    currentDayCheck(dateMap, day);\n\n    return flightDate.getDate() === lookupDate.getDate();\n  });\n  return data;\n};\n\nexport default flightsData;\n","const getData = async() => {\n  const currentDate = new Date()\n    .toLocaleDateString('ru-RU')\n    .replace(/\\./g, '-');\n  const url = `https://api.iev.aero/api/flights/${currentDate}`;\n  const dataPromise = await fetch(url);\n  const fetchedData = await dataPromise.json();\n\n  return fetchedData.body;\n};\n\nexport default getData;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FlightsTable from './FlightsTable';\nimport flightsData from './helper';\nimport getData from './service';\n\nclass Flights extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flights: [],\n      currentFlightsData: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { currentDay, type } = this.props;\n    if (currentDay !== prevProps.currentDay || type !== prevProps.type) {\n      this.setState(prevState => ({\n        currentFlightsData: flightsData(prevState.flights[type], currentDay),\n      }));\n    }\n  }\n\n  async fetchData() {\n    const { currentDay, type } = this.props;\n    const flights = await getData();\n    this.setState({\n      flights,\n      currentFlightsData: flightsData(flights[type], currentDay),\n    });\n  }\n\n  render() {\n    const { type } = this.props;\n    const { currentFlightsData } = this.state;\n\n    return <FlightsTable flightsList={currentFlightsData} pageType={type} />;\n  }\n}\n\nFlights.propTypes = {\n  currentDay: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Flights;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Flights from './Flights';\nimport getData from './service';\n\nconst TYPE_DEPARTURES = 'departure'\nconst TYPE_ARRIVALS = 'arrival'\nconst YESTERDAY = 'Yesterday'\nconst TODAY = 'Today'\nconst TOMORROW = 'Tomorrow'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentPage: TYPE_ARRIVALS,\n      currentDay: TODAY,\n      allFlights: [],\n    };\n  }\n\n  componentDidMount() { \n    this.takeData();\n  }\n\n  async takeData() {\n    const fetchedData = await getData();\n   \n    this.setState({\n      allFlights: fetchedData,\n    });\n  }\n\n  setCurrentPage = (pageType) => {\n    this.setState({ currentPage: pageType });\n  }\n\n  setCurrentDay = (day) => {\n    this.setState({ currentDay: day})\n  }\n\n  render() {\n    const { currentDay, currentPage} = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"typeContainer\">\n          <img\n            src=\"https://bit.ly/2YB0YpL\"\n            alt=\"departures\"\n            className=\"departure-bg-img\"\n          />\n          <button\n            onClick={() => this.setCurrentPage(TYPE_DEPARTURES)}\n            className=\"typeButton\"\n            type=\"button\"\n          >\n            Departures\n          </button>\n          <button\n            onClick={() => this.setCurrentPage(TYPE_ARRIVALS)}\n            className=\"typeButton\"\n            type=\"button\"\n          >\n            Arrivals\n          </button>\n          <img\n            src=\"https://bit.ly/2xrC5Ri\"\n            alt=\"arrivals\"\n            className=\"arrival-bg-img\"\n          />\n        </div>\n        <div className=\"pickADate\">\n          <button\n            type=\"button\"\n            onClick={() => this.setCurrentDay(YESTERDAY)}\n            className=\"dateButton\"\n          >\n            Yesterday\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => this.setCurrentDay(TODAY)}\n            className=\"dateButton\"\n          >\n            Today\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => this.setCurrentDay(TOMORROW)}\n            className=\"dateButton\"\n          >\n            Tomorrow\n          </button>\n        </div>\n        <h3>{`${currentPage}s for ${currentDay}`}</h3>\n        <table className=\"AppTable\">\n          <thead className=\"tableHead\">\n            <tr>\n              <th>Terminal</th>\n              <th>Local Time</th>\n              <th>Destination</th>\n              <th>Status</th>\n              <th>Airline</th>\n              <th>Flight</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            <Flights\n              currentDay={currentDay}\n              type={currentPage}\n            /> \n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}